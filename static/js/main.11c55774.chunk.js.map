{"version":3,"sources":["components/addTag/index.js","components/formUpdatePost/index.js","components/formCreatePost/index.js","views/FormUpdateInfo.js","views/PersonalInfo.js","Post.js","TagList.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Component","Option","Select","children","defaultTags","FormUpdatePost","props","searchIndex","id","result","postLists","forEach","postList","index","onCloseFormUpdatePost","value","closeFormUpdatePost","onHandleChange","event","target","name","type","checked","setState","onHandleSubmit","preventDefault","updatePost","state","loadData","length","tagList","tag","push","key","selectedTag","handleChange","title","content","this","tabIndex","role","aria-labelledby","aria-hidden","className","data-dismiss","aria-label","onClick","onSubmit","htmlFor","placeholder","aria-describedby","onChange","size","mode","style","width","defaultValue","onAddTag","FormCreatePost","tmpSelectedTag","handleTitleChange","e","tmptitle","handleContentChange","tmpcontent","handleSubmit","createPost","isAddTag","layout","labelCol","span","wrapperCol","tailLayout","offset","validateMessages","required","types","number","FormUpdateInfo","onFinish","values","onSubmitUpdate","userInfo","padding","marginTop","initialValues","age","position","company","technology","hobby","Item","label","rules","min","TextArea","htmlType","PersonalInfo","onClickEdit","isUpdateInfo","onClickCancel","formRef","React","createRef","bind","danger","Paragraph","Typography","Content","extraContent","flex","Post","post","boxShadow","margin","background","subTitle","dateCreate","tags","map","color","extra","EditOutlined","DeleteOutlined","avatar","src","ellipsis","rows","expandable","CheckableTag","Tag","TagList","marginRight","filterTagList","indexOf","handleChangeFilterTag","NavBar","theme","onClickChangePage","selectedKeys","currentPage","zIndex","height","GitlabOutlined","float","UserOutlined","exampleTagList","Layout","Header","Footer","dateFormat","year","month","day","hour","minute","App","handleCloseFormUpdatePost","isUpdatePost","handleUpdatePost","slice","Date","toLocaleString","findMaxIndex","idArray","Math","max","handleCreatePost","newTagList","Set","newData","concat","onToggleFormUpdatePost","idUpdatePost","onToggleFormCreatePost","isCreatePost","deletePost","filter","renderPostList","includes","sort","a","b","value1","value2","onUpdatePersonalInfo","newInfo","nextSelectedTags","temp","t","display","justifyContent","alignItems","verticalAlign","border","minHeight","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11c55774.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./AddTag.css\";\n\nclass AddTag extends Component {\n  state = {\n    nameTag: \"\",\n  };\n\n  onCloseFormAddTag = (value) => {\n    this.props.closeFormAddTag(value);\n  };\n\n  onHandleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onHandleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addTag(this.state.nameTag);\n    this.props.closeFormAddTag(false);\n  };\n\n  render() {\n    return (\n      <div\n        className=\"addTask\"\n        id=\"exampleModalCenter\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                Add Tag\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => this.onCloseFormAddTag(false)}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <form onSubmit={this.onHandleSubmit}>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"name\">New Tag:</label>\n                  <input\n                    type=\"text\"\n                    name=\"nameTag\"\n                    id=\"name\"\n                    className=\"form-control\"\n                    placeholder=\"Enter name\"\n                    aria-describedby=\"helpId\"\n                    onChange={this.onHandleChange}\n                    value={this.state.nameTag}\n                  />\n                </div>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={() => this.onCloseFormAddTag(false)}\n                >\n                  Cannel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-outline-success\"\n                  onClick={this.onAddTag}\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddTag;\n","import React, { Component } from \"react\";\nimport './FormUpdatePost.css';\nimport { Tag, Input, Tooltip, Button, Select } from 'antd';\n\nconst { Option } = Select;\nconst children = [];\nconst defaultTags = [];\n\nclass FormUpdatePost extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: -1,\n      title: \"\",\n      // dateCreate: \"\",\n      content: \"\",\n      selectedTag: []\n    };\n    this.loadData();\n  }\n\n  searchIndex = (id) => {\n    let result = -1;\n    this.props.postLists.forEach((postList, index) => {\n      if(postList.id === id) result = index;\n    });\n    return result;\n  }\n\n  componentDidMount() {\n    const { postLists } = this.props;\n    let index = this.searchIndex(this.props.id);\n    if(index !== -1) {\n      this.setState({\n        id: index + 1,\n        title: postLists[index].title,\n        // dateCreate: postLists[index].dateCreate,\n        content: postLists[index].content,\n        selectedTag: defaultTags,\n      });\n    }\n  }\n\n  onCloseFormUpdatePost = (value) => {\n    this.props.closeFormUpdatePost(value);\n  };\n\n  onHandleChange = (event) => {\n    const target = event.target;\n    const name = target.name;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onHandleSubmit = (event) => {\n    event.preventDefault();\n    this.props.updatePost(this.state);\n    this.props.closeFormUpdatePost(false);\n  };\n\n  loadData = () => {\n    const { postLists } = this.props;\n    children.length = 0;\n    defaultTags.length = 0;\n    this.props.tagList.forEach((tag, index) => {\n      if(tag!=='All') children.push(<Option key={index} value={tag}>{tag}</Option>);\n    });\n\n    let index = this.searchIndex(this.props.id);\n    if(index !== -1) {\n      postLists[index].selectedTag.forEach((tag,index) => {\n        defaultTags.push(tag);\n      });\n    };\n  }\n  \n\n  handleChange = (value) => {\n    this.setState({selectedTag: value});\n  }\n\n  render() {\n    return (\n      <div\n        id=\"exampleModalCenter\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div className=\"modal-dialog modal-dialog-centered updatePost\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                Form Update Post\n              </h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                onClick={() => this.onCloseFormUpdatePost(false)}\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <form onSubmit={this.onHandleSubmit}>\n              <div className=\"modal-body\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"title\">Title:</label>\n                  <input\n                    type=\"text\"\n                    name=\"title\"\n                    id=\"title\"\n                    className=\"form-control\"\n                    placeholder=\"Enter name\"\n                    aria-describedby=\"helpId\"\n                    onChange={this.onHandleChange}\n                    value={this.state.title}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"content\">Content:</label>\n                  <textarea\n                    type=\"text\"\n                    name=\"content\"\n                    id=\"content\"\n                    className=\"form-control\"\n                    placeholder=\"Enter name\"\n                    aria-describedby=\"helpId\"\n                    onChange={this.onHandleChange}\n                    value={this.state.content}\n                  />\n                </div>\n                <Select\n                  size=\"large\" \n                  mode=\"tags\" \n                  style={{ width: '100%' }} \n                  placeholder=\"Select Tag\" \n                  onChange={this.handleChange}\n                  defaultValue={defaultTags}\n                >\n                    {children}\n                  </Select>\n              </div>\n              <div className=\"modal-footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary\"\n                  data-dismiss=\"modal\"\n                  onClick={() => this.onCloseFormUpdatePost(false)}\n                >\n                  Cannel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-outline-success\"\n                  onClick={this.onAddTag}\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FormUpdatePost;\n","import React, { Component } from \"react\";\n// import AddTag from \"../addTag\";\nimport { Tag, Input, Tooltip, Button, Select } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nconst { Option } = Select;\nconst children = [];\n\nclass FormCreatePost extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisAddTag: false,\n      tmptitle: '',\n      tmpcontent: '',\n      tmpSelectedTag: []\n    };\n    this.loadData();\n  }\n\n  loadData() {\n    children.length = 0;\n    this.props.tagList.forEach((tag, index) => {\n      if(tag!=='All') children.push(<Option key={index} value={tag}>{tag}</Option>);\n    });\n  }\n\n  handleChange = (value) => {\n    this.setState({tmpSelectedTag: value});\n  }\n  \n  handleTitleChange = (e) => {\n    this.setState({tmptitle: e.target.value});\n  }\n \n  handleContentChange = (e) => {\n    this.setState({tmpcontent: e.target.value});\n  }\n\n  handleSubmit = (e) => {\n    const {tmptitle, tmpcontent, tmpSelectedTag} = this.state;\n    e.preventDefault();\n\n    let value = {\n      title: tmptitle,\n      content: tmpcontent,\n      selectedTag: tmpSelectedTag\n    }\n    this.props.createPost(value);\n    this.setState({\n      isAddTag: false,\n      tmpcontent: '',\n      tmptitle: '',\n      tmpSelectedTag: []\n    })\n  }  \n\n\trender(){\n\t\treturn (\n\t\t\t<div\n        className=\"FormCreatePost\">\n\t\t\t\t<div\n          id=\"exampleModalCenter\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n          aria-labelledby=\"exampleModalCenterTitle\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\n                  Create Post\n                </h5>\n              </div>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"name\">Title:</label>\n                    <input\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"title\"\n                      className=\"form-control\"\n                      placeholder=\"Enter title\"\n                      aria-describedby=\"helpId\"\n                      onChange={this.handleTitleChange}\n                      value={this.state.title}\n                    />\n                    <label htmlFor=\"name\">Content:</label>\n                    <textarea\n                      type=\"text\"\n                      name=\"content\"\n                      id=\"content\"\n                      className=\"form-control\"\n                      placeholder=\"Enter content\"\n                      aria-describedby=\"helpId\"\n                      onChange={this.handleContentChange}\n                      value={this.state.content}\n                    />\n                  </div>\n                  <Select size=\"large\" mode=\"tags\" style={{ width: '100%' }} placeholder=\"Select Tag\" onChange={this.handleChange}>\n                    {children}\n                  </Select>\n                </div>\n\n                <div className=\"modal-footer\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-success\"\n                  >\n                    Create\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FormCreatePost;\n","import React, { Component } from \"react\";\nimport { Form, Input, InputNumber, Button } from \"antd\";\n\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 10,\n  },\n};\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    number: \"${label} is not a validate number!\",\n  },\n};\n\nclass FormUpdateInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.userInfo = props.userInfo;\n    this.onSubmitUpdate = props.onFinish;\n  }\n\n  onFinish = (values) => {\n    this.onSubmitUpdate(values);\n  };\n\n  render() {\n    return (\n      <div style={{ padding: '0 200px', marginTop: 60}}>\n        <Form\n          {...layout}\n          name=\"control-ref\"\n          initialValues={{\n            name: this.userInfo.name,\n            age: this.userInfo.age,\n            position: this.userInfo.position,\n            company: this.userInfo.company,\n            technology: this.userInfo.technology,\n            hobby: this.userInfo.hobby,\n          }}\n          onFinish={this.onFinish}\n          validateMessages={validateMessages}\n        >\n          <Form.Item label=\"Name\" name=\"name\" rules={[{ required: true }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Age\" name=\"age\" rules={[{ required: true }]}>\n            <InputNumber min={1} />\n          </Form.Item>\n          <Form.Item\n            label=\"Position\"\n            name=\"position\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Company\"\n            name=\"company\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"Technology\"\n            name=\"technology\"\n            rules={[{ required: true }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Hobby\" name=\"hobby\" rules={[{ required: true }]}>\n            <Input.TextArea />\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default FormUpdateInfo;\n// export default Form.create()(FormUpdateInfo);\n","import React, { Component } from \"react\";\nimport { Form, Button } from \"antd\";\nimport FormUpdateInfo from \"./FormUpdateInfo\";\n// import '~antd/dist/antd.css';\nconst layout = {\n  labelCol: {\n    span: 4,\n  },\n  wrapperCol: {\n    span: 10,\n  },\n};\n\nclass PersonalInfo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isUpdateInfo: false,\n\n      userInfo: props.userInfo,\n    };\n    this.onSubmitUpdate = props.onSubmitUpdate;\n\n    this.formRef = React.createRef();\n\n    this.onClickEdit = this.onClickEdit.bind(this);\n    this.onClickCancel = this.onClickCancel.bind(this);\n    this.onFinish = this.onFinish.bind(this);\n  }\n\n  onClickEdit = () => {\n    this.setState({ isUpdateInfo: true }, () => {});\n  };\n\n  onClickCancel = () => {\n    this.setState({ isUpdateInfo: false }, () => {});\n  };\n\n  onFinish = (values) => {\n    this.setState(\n      {\n        userInfo: values,\n        isUpdateInfo: false,\n      },\n      () => this.onSubmitUpdate(values)\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.state.isUpdateInfo ? (\n          <Form style={{ padding: '0 200px', marginTop: 60}} title=\"User Information\" {...layout}>\n            <Form.Item label=\"Name\">{this.state.userInfo.name}</Form.Item>\n            <Form.Item label=\"Age\">{this.state.userInfo.age}</Form.Item>\n            <Form.Item label=\"Position\">\n              {this.state.userInfo.position}\n            </Form.Item>\n            <Form.Item label=\"Company\">{this.state.userInfo.company}</Form.Item>\n            <Form.Item label=\"Technology\">\n              {this.state.userInfo.technology}\n            </Form.Item>\n            <Form.Item label=\"Hobby\">{this.state.userInfo.hobby}</Form.Item>\n          </Form>\n        ) : (\n          <FormUpdateInfo\n            userInfo={this.state.userInfo}\n            onFinish={this.onFinish}\n          />\n        )}\n        {!this.state.isUpdateInfo ? (\n          <Button type=\"primary\" onClick={this.onClickEdit}>\n            Edit\n          </Button>\n        ) : (\n          <Button type=\"default\" danger onClick={this.onClickCancel}>\n            Cancel\n          </Button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PersonalInfo;\n","import React, { Component } from 'react';\nimport { Card, Tag, PageHeader, Button, Typography, Row } from 'antd';\nimport { EditOutlined, DeleteOutlined } from '@ant-design/icons';\nimport \"./Post.css\";\n\nconst { Paragraph } = Typography;\n\nconst Content = ({ children, extraContent }) => {\n  return (\n    <Row>\n      <div style={{ flex: 1 }}>{children}</div>\n      <div className=\"image\">{extraContent}</div>\n    </Row>\n  );\n};\n\nclass Post extends Component {\n\n  createPost = (value) => {\n    this.props.createPost(true, value);\n  }\n  \n  render() {\n    const {\n      post,\n      ...props\n    } = this.props;\n  \n    return (\n      <PageHeader\n      style={{boxShadow: \"5px 5px 20px rgba(0,0,0,0.12), 1px 1px 2px rgba(0,0,0,0.24)\", margin: 20, background: \"#fff\"\n      }}\n        title={this.props.post.title}\n        className=\"site-page-header post-container\"\n        subTitle={this.props.post.dateCreate}\n        tags={this.props.post.selectedTag.map(tag => (\n          <Tag\n            key={tag}\n            color=\"blue\"\n          >\n            {tag}\n          </Tag>\n        ))}\n        extra={[\n          <Button key=\"edit\" onClick={() => this.createPost(this.props.post.id)}><EditOutlined /></Button>,\n          <Button key=\"delete\" {...props}>\n            <DeleteOutlined />\n          </Button>,\n        ]}\n        avatar={{ src: 'https://avatars1.githubusercontent.com/u/60763388?s=460&u=1011ca50a99ede598aef7569fc793ce1e4d6f5ce&v=4' }}\n      >\n        <Content>\n          <Paragraph  ellipsis={{ rows: 3, expandable: true }}>\n          {this.props.post.content}\n          </Paragraph>\n        </Content>\n      </PageHeader>\n    );\n  }\n}\n\nexport default Post;\n\n","import React, { Component } from 'react';\nimport { Tag } from 'antd';\n\nconst { CheckableTag } = Tag;\n\nclass TagList extends Component {\n  \n  render() {\n    return (\n      <div className=\"text-center\">\n        <span style={{ marginRight: 8 }}>Tag:</span>\n        {this.props.tagList.map(tag => (\n          <CheckableTag\n            key={tag}\n            checked={this.props.filterTagList.indexOf(tag) > -1}\n            onChange={checked => this.props.handleChangeFilterTag(tag, checked)}\n          >\n            {tag}\n          </CheckableTag>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default TagList;\n\n","import React, { Component } from 'react';\nimport { Menu } from 'antd';\nimport {\n  UserOutlined,\n  EditOutlined,\n  GitlabOutlined,\n} from '@ant-design/icons';\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <Menu theme=\"light\" onClick={this.props.onClickChangePage} selectedKeys={[this.props.currentPage]} mode=\"horizontal\" style={{ position: 'fixed', zIndex: 1, width: '100%', height: 50 }}>\n        <Menu.Item key=\"index\"><GitlabOutlined />My Blog</Menu.Item>\n        <Menu.Item key=\"create\" style={{float: 'right'}}><EditOutlined />Create Post</Menu.Item>\n        <Menu.Item key=\"profile\" style={{float: 'right'}}><UserOutlined />My Profile</Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default NavBar;\n\n","import React from \"react\";\nimport AddTag from \"./components/addTag\";\nimport FormUpdatePost from \"./components/formUpdatePost\";\nimport FormCreatePost from \"./components/formCreatePost\";\nimport FormUpdateInfo from \"./views/FormUpdateInfo\";\nimport PersonalInfo from \"./views/PersonalInfo\";\nimport Post from \"./Post\";\nimport TagList from \"./TagList\";\nimport NavBar from \"./NavBar\";\nimport \"./App.css\";\nimport { Layout, Menu, Carousel, Avatar, Row, Col, Tag } from 'antd';\nimport {\n  UserOutlined,\n  EditOutlined,\n  GitlabOutlined,\n} from '@ant-design/icons';\n\n\nconst { CheckableTag } = Tag;\nconst exampleContent1 = \n      `Ant Design interprets the color system into two levels: a system-level color system and a\n      product-level color system.\n      Ant Designs design team preferred to design with the HSB color model, which makes it\n      easier for designers to have a clear psychological expectation of color when adjusting colors,\n      as well as facilitate communication in teams.`;\nconst exampleContent2 = \n`If you’re thinking of starting your very own blog, but just don’t have a clue on what to blog about, then fear not!\n\nIn this article, I have included a whole load of blog examples from a wide variety of different niches.\n\nSince the beginning of the internet, millions and millions and millions of blogs have been created. Many have died due to lost interest or their owners giving up on the idea, while others have thrived and continue to grow, making money and earning their owners a steady income. It’s a constant evolution of content that keeps people coming back for more, especially if these blogs contact highly resourceful material that people find useful and interesting.\n\nEach example listed in this blog post are all different in some way and all bring something unique to their readers & subscribers. I want to show you what is possible and how you can take inspiration from them and create an awesome blog of your own.\n\nSome of these blogs make over $100k a month, others are just a hobby for their owners, but all have the same purpose at their core… the love of writing and sharing information.`\nconst exampleContent3 = \n`One of the more popular frugal blogs in the UK, Miss Thrifty is targeting young mums with her money saving, frugal tips and articles. And rightly so! The market is massive and she’s meeting a need for this type of information. Young mums aren’t exactly rolling in cash. They may have had to give up work and are now relying on just one wage coming in, so the need to be more frugal with everyday living is a must.\n\nThe great thing about this blog is the conversational tone and the real person behind the brand. I think it’s inspiring to other mums to see someone like them making such a difference in other people’s lives by creating amazingly useful content that is 100% actionable. Also it may inspire mums to set up their own blog and to write about their experiences as a mother and a wife in the 21st century.`\nconst exampleContent4 = \n`Medium is not like any other platform on the internet. Our sole purpose is to help you find compelling ideas, knowledge, and perspectives. We don’t serve ads—we serve you, the curious reader who loves to learn new things. Medium is home to thousands of independent voices, and we combine humans and technology to find the best reading for you—and filter out the rest.I love Medium’s new publications: OneZero, GEN, Heated. And, I’m especially excited about Tenderly.\nIn a web full of pseudo thought-leaders, Medium is the one place that I can reliably come to and be better informed in the easiest way possible of the things that matter to me.\n`\nconst exampleTagList = [\"All\",\"React\",\"Blockchain\",\"PHP\",\"BrSE\",\"AI\"]\nconst { Header, Content, Footer } = Layout;\nconst dateFormat = {year: 'numeric', month: 'long', day: 'numeric', hour: 'numeric', minute: 'numeric'};\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userInfo: {\n        name: \"Duy Nguyen\",\n        age: 18,\n        position: \"BrSE\",\n        company: \"Google Inc.\",\n        technology: \"Python, NodeJS, ReactJS\",\n        hobby: \"Reading Books, Travel\"\n      },\n      tagList: exampleTagList, //initial value must have tag \"All\" \n      filterTagList: [\"All\"],\n      isAddTag: false,\n      isUpdatePost: false,\n      isCreatePost: true,\n      currentPage: 'index',\n      postLists: [\n        {\n          id: 1,\n          title: \"Master AI in 2 hours\",\n          dateCreate: new Date('December 17, 2018 03:24:00').toLocaleString('ja-JP',dateFormat),\n          content: exampleContent1,\n          selectedTag: [\"AI\"],\n        },\n        {\n          id: 2,\n          title: \"Become BrSE - A bright future for developer\",\n          dateCreate: new Date('January 14, 2020 09:40:00').toLocaleString('ja-JP',dateFormat),\n          content: exampleContent2,\n          selectedTag: [\"React\",\"BrSE\"],\n        },\n        {\n          id: 3,\n          title: \"PHP in a nutshell\",\n          dateCreate: new Date('February 17, 2020 08:24:00').toLocaleString('ja-JP',dateFormat),\n          content: exampleContent3,\n          selectedTag: [\"Blockchain\",\"PHP\"],\n        },\n        {\n          id: 4,\n          title: \"Deep Learning for beginner\",\n          dateCreate: new Date('March 11, 2020 09:14:00').toLocaleString('ja-JP',dateFormat),\n          content: exampleContent4,\n          selectedTag: [\"AI\",\"BrSE\"],\n        },\n      ],\n      idUpdatePost: -1\n    };\n\n    this.onUpdatePersonalInfo = this.onUpdatePersonalInfo.bind(this);\n    this.handleCreatePost = this.handleCreatePost.bind(this);\n    this.handleChangeFilterTag = this.handleChangeFilterTag.bind(this);\n    this.onClickChangePage = this.onClickChangePage.bind(this);\n  }\n\n  onUpdatePersonalInfo(newInfo) {\n    this.setState({\n      userInfo: newInfo,\n      currentPage: 'index'\n    });\n  }\n\n  handleChangeFilterTag(tag, checked) {\n    const { filterTagList } = this.state;\n    let nextSelectedTags = [];\n    if (checked && tag === \"All\") {\n      nextSelectedTags = [\"All\"];\n    } \n    else if (checked && tag !== \"All\") {\n      let temp = filterTagList.filter(t => t !== \"All\");\n      nextSelectedTags = [...temp, tag];\n    } \n    else {\n      nextSelectedTags = filterTagList.filter(t => t !== tag);\n    }\n    if (nextSelectedTags.length == 0) {\n      nextSelectedTags = [\"All\"];\n    }\n    this.setState({ filterTagList: nextSelectedTags });\n  }\n\n  handleCloseFormUpdatePost = (value) => {\n    this.setState({\n      isUpdatePost: value,\n    });\n  };\n\n  searchIndex = (id) => {\n    let result = -1;\n    this.state.postLists.forEach((postList, index) => {\n      if (postList.id === id) result = index;\n    });\n    return result;\n  };\n\n  handleUpdatePost = (value) => {\n    const { postLists } = this.state;\n    let index = this.searchIndex(value.id);\n    if (index !== -1) {\n      this.setState({\n        postLists: [\n          ...postLists.slice(0, index),\n          {\n            id: value.id,\n            title: value.title,\n            dateCreate: new Date().toLocaleString('ja-JP',dateFormat),\n            content: value.content,\n            selectedTag: value.selectedTag\n          },\n          ...postLists.slice(index + 1),\n        ],\n      });\n    }\n  };\n\n  findMaxIndex = () => {\n    const { postLists } = this.state;\n    let idArray = postLists.map(post => post.id);\n    \n    return Math.max(...idArray);\n  }\n\n  handleCreatePost = (value) => {\n    const { postLists, tagList } = this.state;\n    let newTagList = [...new Set([...tagList, ...value.selectedTag])];\n    let index = this.findMaxIndex();\n    const newData = postLists.concat([{\n      id: index + 1,\n      title: value.title,\n      dateCreate: new Date().toLocaleString('ja-JP',dateFormat),\n      content: value.content,\n      selectedTag: value.selectedTag,\n    }]);\n    this.setState({\n      postLists: newData,\n      tagList: newTagList,\n      currentPage: 'index'\n    });\n  };\n\n  onToggleFormUpdatePost = () => {\n    let result = null;\n    this.state.isUpdatePost\n      ? (result = (\n          <FormUpdatePost\n            closeFormUpdatePost={this.handleCloseFormUpdatePost}\n            updatePost={this.handleUpdatePost}\n            id={this.state.idUpdatePost}\n            postLists={this.state.postLists}\n            tagList={this.state.tagList}\n          />\n        ))\n      : (result = \"\");\n    return result;\n  };\n\n  onToggleFormCreatePost = () => {\n    let result = null;\n    this.state.isCreatePost\n      ? (result = (\n          <FormCreatePost\n            createPost={this.handleCreatePost}\n            postLists={this.state.postLists}\n            tagList={this.state.tagList}\n          />\n        ))\n      : (result = \"\");\n    return result;\n  };\n\n  deletePost = (value) => {\n    const {postLists} = this.state;\n    const newData = postLists.filter((post) => post!==value);\n    this.setState({postLists: newData});\n  }\n\n  renderPostList = (filterTagList) => {\n    const {postLists} = this.state;\n    let renderPostList = [];\n    if (filterTagList.length == 1 && filterTagList[0] == \"All\") {\n      renderPostList = postLists;\n    } else {\n      renderPostList = postLists.filter(post => (post.selectedTag.filter((tag) => filterTagList.includes(tag)).length > 0));\n    }\n    renderPostList = renderPostList.slice().sort((a, b) => b.dateCreate - a.dateCreate)\n    return (renderPostList.map((post,index) => (\n      <Post\n        key={index}\n        post={post}\n        createPost={(value1, value2) => this.setState({ isUpdatePost: value1, idUpdatePost: value2})}\n        onClick={() => this.deletePost(post)}\n      />\n  )));\n  }\n\n  onClickChangePage = e => {\n    this.setState({\n      currentPage: e.key,\n    });\n  };\n\n\n  render() {\n    return (\n      <Layout className=\"layout\" style={{background: \"#fff\"}}> \n        {/* <Menu theme=\"light\" onClick={this.onClickChangePage} selectedKeys={[this.state.currentPage]} mode=\"horizontal\" style={{ position: 'fixed', zIndex: 1, width: '100%', height: 50 }}>\n          <Menu.Item key=\"index\"><GitlabOutlined />My Blog</Menu.Item>\n          <Menu.Item key=\"create\" style={{float: 'right'}}><EditOutlined />Create Post</Menu.Item>\n          <Menu.Item key=\"profile\" style={{float: 'right'}}><UserOutlined />My Profile</Menu.Item>\n        </Menu> */}\n        <NavBar\n        currentPage = {this.state.currentPage}\n        onClickChangePage = {this.onClickChangePage}\n        />\n        {this.state.currentPage == 'index' ? \n          <>\n          <Carousel style={{ marginTop: 50 }} >\n            <div>\n            <img style={{width: '100%'}} src=\"https://images.pexels.com/photos/739349/pexels-photo-739349.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"></img>\n            </div>\n          </Carousel>\n          <div style={{ display: 'inline-flex', justifyContent: 'center', alignItems: 'center'}}>\n            <Avatar size={200} src='https://avatars1.githubusercontent.com/u/60763388?s=460&u=1011ca50a99ede598aef7569fc793ce1e4d6f5ce&v=4' style={{display: 'inline-block', verticalAlign: 'middle', marginTop: '-100px', border: '2px solid white'}}/>\n          </div>\n          <div className=\"ml-auto mr-auto text-center col-md-6\">\n            <h1>{this.state.userInfo.name}</h1>\n            <h3 className=\"text-uppercase\">{this.state.userInfo.position}</h3>\n            <h4 className=\"font-weight-light\">{this.state.userInfo.company}</h4>\n            <br/>\n            <h3>Enjoy Reading!</h3>\n            <br />\n            <br />\n          </div>\n          </>\n          : null\n        }\n\n        <Content style={{ padding: '0 200px', marginTop: 0, minHeight: '90vh' }}>  \n          <div className=\"site-layout-content\">\n            {this.state.currentPage == 'profile' ?\n              <PersonalInfo\n                userInfo={this.state.userInfo}\n                onSubmitUpdate={(values) => this.onUpdatePersonalInfo(values)}\n              />\n              : null\n            }\n\n            {this.state.currentPage == 'create' ?\n              <FormCreatePost\n                createPost={this.handleCreatePost}\n                postLists={this.state.postLists}\n                tagList={this.state.tagList}\n              />\n              : null\n            }\n          \n            {this.state.currentPage == 'index' && !this.state.isUpdatePost ? \n              <>\n              <TagList\n                tagList = {this.state.tagList}\n                filterTagList = {this.state.filterTagList}\n                handleChangeFilterTag = {this.handleChangeFilterTag}\n              />\n              {this.renderPostList(this.state.filterTagList)}\n              {this.onToggleFormUpdatePost()}\n              </>\n              : <div>{this.onToggleFormUpdatePost()}</div>\n            }\n          </div>\n          \n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Group6 ©2020 ITSS</Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}